GROUP BY --------

1. Contare quanti iscritti ci sono stati ogni anno:
SELECT YEAR(`enrolment_date`), COUNT(`id`) AS `enrolled_same_year` 
FROM `students` 
GROUP BY YEAR(`enrolment_date`);

2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio:
SELECT `office_address`, COUNT(`id`) AS `same_address` 
FROM `teachers` 
GROUP BY `office_address`;

3. Calcolare la media dei voti di ogni appello d'esame:
SELECT `exam_id`, AVG(`vote`) AS `average_vote` 
FROM `exam_student` 
GROUP BY (`exam_id`);

4. Contare quanti corsi di laurea ci sono per ogni dipartimento:
SELECT `department_id`, COUNT(`id`) AS `available_degrees` 
FROM `degrees` 
GROUP BY (`department_id`);

(In questi casi potevo anche fare COUNT(*))


JOIN -------------

1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia:
SELECT * 
FROM `students` 
INNER JOIN `degrees` ON `students`.`degree_id` = `degrees`.`id` 
WHERE `degrees`.`name` = 'Corso di Laurea in Economia';

2. Selezionare tutti i Corsi di Laurea del Dipartimento di Neuroscienze:
SELECT * 
FROM `degrees` 
INNER JOIN `departments` ON `degrees`.`department_id` = `departments`.`id` 
WHERE `departments`.`name` = 'Dipartimento di Neuroscienze';

3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44):
SELECT `courses`.`id`, `courses`.`name` AS `course_name`, `teachers`.`surname`, `teachers`.`name`
FROM `courses` 
INNER JOIN `course_teacher` AS `ct` ON `ct`.`course_id` = `courses`.`id` 
INNER JOIN `teachers` ON `ct`.`teacher_id` = `teachers`.`id` 
WHERE `teachers`.`id` = 44;

4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il relativo dipartimento, 
in ordine alfabetico per cognome e nome:
SELECT `students`.`surname`, `students`.`name`, `students`.`registration_number`,
`degrees`.`name` AS `degree_name`, `degrees`.`level`,
`departments`.`name` AS `department_name`
FROM `students` 
INNER JOIN `degrees` ON `students`.`degree_id` = `degree_id` 
INNER JOIN `departments` ON `degrees`.`department_id` = `departments`.`id` 
ORDER BY `students`.`surname`, `students`.`name` ASC;

5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti:
SELECT `degrees`.`name` AS `degree_name`, `courses`.`name` AS `course_name`, `teachers`.`surname`, `teachers`.`name`
FROM `degrees`
INNER JOIN `courses` ON `courses`.`degree_id` = `degrees`.`id`
INNER JOIN `course_teacher` ON `course_teacher`.`course_id` = `courses`.`id`
INNER JOIN `teachers` ON `course_teacher`.`teacher_id` = `teachers`.`id`
ORDER BY `degrees`.`name` ASC;

6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54):
SELECT DISTINCT CONCAT(`teachers`.`surname`," ", `teachers`.`name`) AS `fullname`, `teachers`.`id`,
`departments`.`name` AS `department_name`
FROM `teachers`
INNER JOIN `course_teacher` AS `ct` ON `ct`.`teacher_id` = `teachers`.`id`
INNER JOIN `courses` ON `ct`.`course_id` = `courses`.`id`
INNER JOIN `degrees` ON `courses`.`degree_id`= `degrees`.`id`
INNER JOIN `departments` ON `degrees`.`department_id` = `departments`.`id`
WHERE `departments`.`name` = 'Dipartimento di Matematica'  
ORDER BY `fullname` ASC;

(The SELECT DISTINCT statement is used to return only distinct (different) values.)

7. BONUS = Selezionare per ogni studente quanti tentativi dâ€™esame ha sostenuto per superare ciascuno dei suoi esami
PER OGNI STUDENTE DEVO CONTARE: 
SELECT `students`.`surname`, `students`.`name`,
`courses`.`name` AS `course_name`,
COUNT(*) AS `attempts`,
MAX(`exam_student`.`vote`) AS `max_vote_attempts`
FROM `students`
INNER JOIN `exam_student` ON `exam_student`.`student_id` = `students`.`id`
INNER JOIN `exams` ON `exams`.`id` = `exam_student`.`exam_id`
INNER JOIN `courses` ON `exams`.`course_id` = `courses`.`id`
GROUP BY `courses`.`id`, `students`.`id`
HAVING (`max_vote_attempts`) >= 18;

(The HAVING command is used instead of WHERE with aggregate functions.)